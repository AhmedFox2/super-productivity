@import '../../../../variables.scss';

$split-extra-border-radius: 20px;
$margin-bottom: 4px;

:host {
  --project-color: $light-theme-separator-color;

  border-radius: 4px;
  margin-right: 10px;
  // size of sticky header
  scroll-margin-top: 120px;
  scroll-padding-top: 120px;
  line-height: 1;
  min-height: 20px;
  display: flex;
  align-items: flex-start;
  // TODO evaluate
  // TODO find better workaround
  margin-bottom: $margin-bottom;

  border: 1px solid $light-theme-separator-color;
  //border-color:var(--project-color);
  //border-width: 0;
  // has to be for after elements
  overflow: visible !important;

  background: #fff;
  color: $light-theme-text-color;
  position: relative;
  border-left: 3px solid var(--project-color);

  @include mq(xs, max) {
    border-left-width: 2px;
    margin-right: 5px;
  }

  &:hover {
    //z-index: 3;
    //overflow: visible;
  }

  @include darkTheme() {
    //border-color: $dark-theme-separator-color;
    border-color: rgba(255, 255, 255, 0.1);
    border-left-color: var(--project-color);
    background: $dark-theme-bg-slightly-lighter;
    color: $dark-theme-text-color;
    //border-top-width: 1px;
    //border-top-color: $dark-theme-bg;
  }

  &.split-start {
    border-radius: $split-extra-border-radius;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-style: dashed;
  }

  &.split-continued {
    border-radius: $split-extra-border-radius;
    border-top-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-style: dashed;
    border-top-style: dashed;
  }

  &.split-continued-last {
    border-radius: $split-extra-border-radius;
    border-top-style: dashed;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  &.split-continued,
  &.split-continued-last {
    //opacity: .7;
    .title {
      opacity: 0.4;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      text-align: center;
      font-style: italic;
    }
  }
}

:host.LunchBreak {
  display: flex;
  justify-content: center;
  align-items: center;
  background: transparent;
  margin-top: 2px;
  border: none !important;

  .title {
    flex-grow: 0;
    column-width: auto;
  }

  > mat-icon {
    margin-top: 0;
  }
}

:host::before {
  // NOTE: there are some styles in the parent component since host:active + :host  is not working
  content: '';
  position: absolute;
  top: 100%;
  height: $margin-bottom;
  left: 0;
  right: 0;
  z-index: 3;
  opacity: 0;
  background: red;
}

:host {
  &.TaskPlannedForDay,
  &.Task,
  &.SplitTask,
  &.SplitTaskPlannedForDay,
  &.SplitTaskContinued,
  &.SplitTaskContinuedLast {
    box-shadow: $whiteframe-shadow-1dp;
  }
}

// non draggable
:host {
  &.CalendarEvent,
  &.RepeatProjection,
  &.RepeatProjectionSplit,
  &.RepeatProjectionSplitContinued,
  &.RepeatProjectionSplitContinuedLast,
  &.ScheduledRepeatProjection {
    //opacity: 0.5;
    //opacity: 0.9;
    background: $light-theme-bg;
    border-width: 1px;
    border-left-width: 3px;
    border-style: dashed;
    border-left-style: solid;
    //border: 1px solid $light-theme-separator-color;

    @include darkTheme() {
      //border-color: $dark-theme-separator-color;
      background: $dark-theme-bg;
    }

    &:hover {
      opacity: 1;
      outline: 1px solid $c-accent;
    }

    .title {
      padding: 2px;
    }
  }
}

//  scheduable tasks
:host {
  &.ScheduledTask {
    border-radius: 0;

    .ico {
      color: $c-primary;
      font-size: 22px;
      height: 22px;
      margin-left: 2px;
      min-width: 22px;
      margin-top: 4px;
      opacity: 1;
      //border: 1px solid;
      //border-radius: 50%;
      //padding: 4px;

      @include mq(xs, max) {
        display: block !important;
        font-size: 12px;
        height: 12px;
        line-height: 12px;
        min-width: 12px;
        margin-left: 1px;
        margin-top: 2px;
      }
    }

    button {
      display: none;
      pointer-events: all;
      cursor: pointer;
      position: absolute;
      //left: -10px;
      //top: 50%;
      //transform: translateY(-50%);
      right: -4px;
      bottom: -4px;
    }
  }
}

:host > * {
  pointer-events: none;
}

//:host-context(.is-dragging):hover {
//  background: $dark24;
//}

.fake-ico,
.ico {
  font-size: 14px;
  height: 14px;
  line-height: 14px;
  min-width: 14px;
  margin-left: 4px;
  margin-top: 5px;
  opacity: 0.6;

  @include mq(xs, max) {
    display: none;
  }
}

.fake-ico {
  text-align: center;
  font-weight: bold;
}

.title {
  font-size: 13px;
  overflow: hidden;
  text-overflow: ellipsis;
  flex-grow: 1;
  flex-shrink: 1;
  padding: 4px;
  font-weight: 400;
  line-height: 1.2;
  max-height: 100%;
  // somehow this fixes the cut off lines problem
  column-width: 250px;
  //font-weight: bold;

  @include mq(xs, max) {
    font-size: 11px;
    line-height: 1.2;
  }

  @include mq(xxs, max) {
    font-size: 11px;
    line-height: 1.1;
  }

  //&:hover {
  //  box-shadow: $whiteframe-shadow-3dp;
  //  background: inherit;
  //  //border: 1px solid $light-theme-separator-color;
  //  border-radius: 4px;
  //}

  :host.SplitTaskContinued &,
  :host.RepeatProjectionSplitContinued &,
  :host.SplitTaskContinuedLast &,
  :host.RepeatProjectionSplitContinuedLast {
    //white-space: nowrap;
    //max-width: 100%;
    line-clamp: 1;
  }
}

// planner tasks
:host-context(.is-dragging.TaskPlannedForDay) :host.TaskPlannedForDay,
:host-context(.is-dragging.TaskPlannedForDay) :host.SplitTaskPlannedForDay,
:host-context(.is-dragging.SplitTaskPlannedForDay) :host.TaskPlannedForDay,
:host-context(.is-dragging.SplitTaskPlannedForDay) :host.SplitTaskPlannedForDay,
  // normal tasks
:host-context(.is-dragging.Task) :host.Task,
:host-context(.is-dragging.Task) :host.SplitTask,
:host-context(.is-dragging.SplitTask) :host.SplitTask,
:host-context(.is-dragging.SplitTask) :host.Task {
  //background: $light-theme-bg-darker;
  //outline: 1px solid $c-accent;
  box-shadow: $whiteframe-shadow-6dp;
}

:host-context( .isDarkTheme .is-dragging.TaskPlannedForDay) :host.TaskPlannedForDay,
:host-context( .isDarkTheme .is-dragging.TaskPlannedForDay) :host.SplitTaskPlannedForDay,
:host-context( .isDarkTheme .is-dragging.SplitTaskPlannedForDay) :host.TaskPlannedForDay,
:host-context( .isDarkTheme .is-dragging.SplitTaskPlannedForDay) :host.SplitTaskPlannedForDay,
  // normal tasks
:host-context( .isDarkTheme .is-dragging.Task) :host.Task,
:host-context( .isDarkTheme .is-dragging.Task) :host.SplitTask,
:host-context( .isDarkTheme .is-dragging.SplitTask) :host.SplitTask,
:host-context( .isDarkTheme .is-dragging.SplitTask) :host.Task {
  background: $dark24;
  outline: none;
}

:host {
  transition: 200ms transform;
  position: relative;
}

:host.drag-over {
  //background: $c-accent !important;
  //color: $c-contrast !important;
  transform: translateY(40px);
  z-index: 3;

  &:after {
    // NOTE: there are some styles in the parent component since host:active + :host  is not working
    content: '';
    position: absolute;
    transform: translateY(-40px);
    top: -1 * $margin-bottom;
    height: 40px + $margin-bottom;
    left: 0;
    right: 0;
    z-index: 3;
    opacity: 0;
    //border: 1px solid red;
  }
}

:host.draggable {
  cursor: grab;

  &:active {
    cursor: grabbing;
    transition: none;
  }
}
